/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
       Map<Integer,Integer>map=new HashMap<>();
       ListNode curr=head;
       ListNode prev=null;
        while(curr!=null){
            int val=curr.val;
            if(map.containsKey(val)){
               map.put(val,map.get(val)+1);
            }else{
               map.put(val,1);
            }
            curr=curr.next;
        }
        curr=head;
        while(curr!=null){
            if(map.get(curr.val)>1){
                if(prev!=null){
                    prev.next=curr.next;
                }else{
                    head=curr.next;
                }
                curr=prev==null?head:prev.next;
            }else{
                prev=curr;
                curr=curr.next;
            }
                
        }
        return head;
    }
}